name: Release Build

on:
  release:
    types: [published]
  pull_request:
    branches: [main]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu,   pkg: mcp-bridge-linux-x86_64 }
          - { os: ubuntu-latest, target: aarch64-unknown-linux-gnu,  pkg: mcp-bridge-linux-aarch64, use_cross: true }
          - { os: macos-latest,  target: x86_64-apple-darwin,        pkg: mcp-bridge-macos-x86_64 }
          - { os: macos-latest,  target: aarch64-apple-darwin,       pkg: mcp-bridge-macos-aarch64 }
          - { os: windows-latest,target: x86_64-pc-windows-msvc,     pkg: mcp-bridge-windows-x86_64.exe }

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross
        if: matrix.use_cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build (cross)
        if: matrix.use_cross
        run: cross build --release --target ${{ matrix.target }}

      - name: Build (cargo)
        if: ${{ !matrix.use_cross }}
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package (*nix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir pkg
          cp target/${{ matrix.target }}/release/mcp-bridge${{ runner.os == 'Windows' && '.exe' || '' }} pkg/mcp-bridge
          cp -r conf mcp_tools README.md pkg/
          tar -czf ${{ matrix.pkg }}.tar.gz -C pkg .

      - name: Package (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          mkdir pkg
          Copy-Item "target/${{ matrix.target }}/release/mcp-bridge.exe" "pkg/mcp-bridge.exe"
          Copy-Item "conf" -Recurse -Destination "pkg"
          Copy-Item "mcp_tools" -Recurse -Destination "pkg"
          Copy-Item "README.md" "pkg"
          tar -czf "${{ matrix.pkg }}.tar.gz" -C pkg .

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}.tar.gz
          path: ${{ matrix.pkg }}.tar.gz

  attach-to-release:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: .
          merge-multiple: true

      - uses: softprops/action-gh-release@v2
        with:
          files: "*.tar.gz"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
